# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: keda-http
version: 0.1.2
description: "An example Porter configuration"
# TODO: update the registry to your own, e.g. myregistry
registry: ghcr.io/squillace-io

# If you want to customize the Dockerfile in use, uncomment the line below and update the referenced file. 
# See https://porter.sh/custom-dockerfile/
dockerfile: Dockerfile.tmpl

mixins:
  - kubernetes
  - exec
  - helm3:
      clientVersion: v3.3.4
      repositories:
        kedacore:
          url: "https://kedacore.github.io/charts"

# kubectl create namespace keda
# helm install keda kedacore/keda --namespace keda

install:
  - exec:
      command: bash
      description: "Creating the keda namespace."
      flags:
          c: '"kubectl create ns {{bundle.parameters.NAMESPACE}} --dry-run -o yaml | kubectl apply -f -"' 


  - helm3:
      description: "Use Helm to deploy an NGINX ingress controller."
      upsert: true # uses "helm3 upgrade --install" instead of install. Can't use --replace.
      name: keda # parameterize
      chart: kedacore/keda
      version: 2.0.0
      namespace: "{{bundle.parameters.NAMESPACE}}"
#      replace: true # removed to enable upsert behavior
      wait: true # default true


#  - exec:
#      command: bash
#      description: "Creating the ingress namespace."
#      flags:
#          c: '"kubectl create ns {{ bundle.parameters.NAMESPACE }} --dry-run -o yaml | kubectl apply -f -"' 
          
  - helm3:
      description: "Installing the http-add-on....."
      upsert: true # uses "helm3 upgrade --install" instead of install. Can't use --replace.
      name: kedahttp # parameterize
      chart: ./charts/keda-http-operator
      version: 2.0.0
      namespace: "{{bundle.parameters.NAMESPACE}}"
#      replace: true # removed to enable upsert behavior
      wait: true # default true
      set:
        watchNamespace: "{{ bundle.parameters.NAMESPACE }}"
        
  - exec:
      command: bash
      description: "Testing the cluster..."
      suppress-output: false
      flags:
        c: '"helm3 list -n {{bundle.parameters.NAMESPACE}}"'

upgrade:
  - exec:
      description: "World 2.0"
      command: ./helpers.sh
      arguments:
        - upgrade

uninstall:
  - helm3:
      description: "Deleting the keda deployment..."
      arguments:
        - "delete"
        - "keda"
        - "namespace {{bundle.parameters.NAMESPACE}}"

  - helm3:
      description: "Deleting the Keda-Http release..."
      upsert: true # uses "helm3 upgrade --install" instead of install. Can't use --replace.
      name: kedahttp # parameterize
      namespace: "{{bundle.parameters.NAMESPACE}}"
#      replace: true # removed to enable upsert behavior

  - helm3:
      description: "Deleting the Keda release..."
      upsert: true # uses "helm3 upgrade --install" instead of install. Can't use --replace.
      name: kedahttp # parameterize
      namespace: "{{bundle.parameters.NAMESPACE}}"
#      replace: true # removed to enable upsert behavior

  - exec:
      command: bash
      description: "Deleting the keda namespace."
      flags:
          c: '"kubectl create ns {{bundle.parameters.NAMESPACE}} --dry-run -o yaml | kubectl delete -f -"' 
  - exec:
      command: bash
      description: "Deleting the demo namespace."
      flags:
          c: '"kubectl create ns {{ bundle.parameters.NAMESPACE }} --dry-run -o yaml | kubectl delete -f -"' 

# Below is an example of how to define credentials
# See https://porter.sh/author-bundles/#credentials
credentials:
  - name: kubeconfig
    path: /root/.kube/config
#  - name: username
#    env: USERNAME

# Below is an example of how to define parameters
# See https://porter.sh/author-bundles/#parameters
parameters:
  - name: NAMESPACE
    type: string
    env: NAMESPACE
    default: keda

# The following values are consumed by the Azure Portal and turned into visual blades and UI elements.
custom:
  com.azure.creatuidef:
    blades:
      Kubernetes:
        displayOrder: 1
        label: Kubernetes Properties
    elements:
      - name: kubeconfig
        tooltip: A valid Kubernetes config for the Kuberentes cluster to install Kubeflow
        displayName: Kubernetes Configuration
        displayOrder: 1
        uitype: Microsoft.Common.TextBox
        bladename: Kubernetes
      - name: deploymentTime
        hide: true
      - name: cnab_installation_name
        displayOrder: 1
        tooltip: The CNAB Bundle installation name
        displayName: Installation Name
        bladename: Kubernetes